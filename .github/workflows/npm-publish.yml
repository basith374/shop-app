# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches: [ master, staging ]

jobs:
  build-prod:
    if: ${{ github.ref == 'refs/heads/master' }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install dependencies
      run: npm i
    - name: Build
      run: npm run build
      env:
        REACT_APP_API_URL: ${{ secrets.API_URL }}
    - name: Deploy to production
      uses: easingthemes/ssh-deploy@v2.1.1
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}  
        SOURCE: ''
        TARGET: ${{ secrets.REMOTE_TARGET }}
        
  build-staging:
    if: ${{ github.ref == 'refs/heads/staging' }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install dependencies
      run: npm i
    - name: Build
      run: npm run build
      env:
        REACT_APP_API_URL: ${{ secrets.STAGING_API_URL }}
    - name: Deploy to staging
      uses: easingthemes/ssh-deploy@v2.1.1
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}  
        SOURCE: ''
        TARGET: ${{ secrets.STAGING_TARGET }}
